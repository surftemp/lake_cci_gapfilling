Metadata-Version: 2.4
Name: lake_dashboard
Version: 0.0.1
Summary: Various utilities creating and analysing gap-filled lake data
Home-page: https://github.com/surftemp/lake_dashboard
Author: Niall McCarroll
Author-email: n.f.mccarroll@reading.ac.uk
Project-URL: Bug Tracker, https://github.com/surftemp/lake_dashboard/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Dynamic: license-file

# lake_dashboard

## this repo provides a number of tools for working with the CCI per-lake files available in the following directory

/gws/nopw/j04/nceo_uor/users/lcarrea01/TIME_SERIES_PL_L3C/PER_LAKE_TIME_SERIES/LAKE_TS/v2.6.1-146-gfe50b81_L3S_GLC3S/Globolakes

This repo contains code originally developed for a previous project - see https::/github.com/surftemp/dineof_integration

## Installation

Installation into a miniforge enviromnent is suggested.  See [https://github.com/conda-forge/miniforge](https://github.com/conda-forge/miniforge) for installing miniforge.

Then create an environment using:

```
mamba create -n lake_dashboard python=3.10
mamba activate lake_dashboard
mamba install flask xarray netcdf4 bokeh selenium firefox geckodriver
```

Install the tools from this repo using:

```
conda activate lake_dashboard
git clone git@github.com:surftemp/lake_dashboard.git
cd lake_dashboard
pip install -e .
```

## Tools

A couple of utilities are provided for working with dineof:

Specific to DINEOF:

* dineof_preprocessor - a tool to prepare data for input to dineof
* dineof_postprocessor - a tool to analyse the dineof results and merge them back with the input data file that can be analysed using the lake_dashboard tool

General:

* lake_dashboard - a tool to compare reconstructed and observed LSWT

#### dineof_preprocessor

Convert an input file to `prepared.nc` in a form suitable for DINEOF to use

Usage:

```
dineof_preprocessor <test-id> <C3S-LAKE-FILE-PATH> <PREPARED-DATA-PATH>
```

Example:

```
dineof_preprocessor test1 LAKE00000109-GloboLakes_C3S-L3S-LSWT_PL_TS-v4.0-fv01.0.nc prepared.nc
```

| Option               | Use                                                                              |
|----------------------|----------------------------------------------------------------------------------|
 | --quality-threshold  | quality threshold - use data where the quality is greater than or equal to this  |
| --remove-empty       | remove frames from output which contain no data                                  |
| --remove-threshold   | remove frames from output which less than the specified fraction of valid values |

See an example (dineof.init)[test/dineof_test1/dineof.init] file that is set up to work with the prepared data

#### dineof_postprocessor

Postprocess the outputs from running dineof - merge the filled temperatures back to the original dataset

Usage:
```
dineof_postprocessor  \
  --lake-path <C3S-LAKE-FILE-PATH> \
  --dineof-input-path <PREPARED-DATA-PATH> \
  --dineof-output-path <DINEOF-OUTPUT-PATH> \
  --output-path <MERGED-OUTPUT-PATH> \
  --output-html-folder <PATH-TO-HTML-OUPUT-FOLDER>
```

Example:

```
dineof_postprocessor  \
  --lake-path c3s_example/LAKE00000109-GloboLakes_C3S-L3S-LSWT_PL_TS-v4.0-fv01.0.nc \
  --dineof-input-path dineof_test1/prepared.nc \
  --dineof-output-path test_results/dineof_test1/output.nc \
  --output-path dineof_test1_outputs/LAKE00000109-GloboLakes_C3S-L3S-LSWT_PL_TS-v4.0-fv01.0-filled.nc \
  --output-html-folder dineof_test1_outputs/html
```

In this example:

* `c3s_example/LAKE00000109-GloboLakes_C3S-L3S-LSWT_PL_TS-v4.0-fv01.0.nc` is the C3S lake file for lake 109
* `dineof_test1/prepared.nc` is the data file prepared by `dineof_preprocessor` for input to dineof
* `test_results/dineof_test1/output.nc` is the data file output from the dineof run
* `dineof_test1_outputs/LAKE00000109-GloboLakes_C3S-L3S-LSWT_PL_TS-v4.0-fv01.0-filled.nc` is output, containing the LSWT original and filled values
* `dineof_test1_outputs/html` is an optional folder to write plots and html describing the EOFS

To view the EOFs, open the file dineof_test1_outputs/html/index.html in a web browser

#### lake_dashboard

Use this tool to view and compare the output files.  Note - you will need to run this on your local machine, not on JASMIN.

Usage:

```
lake_dashboard --data \
  example_data/lake_109/LAKE00000109-GloboLakes_C3S-L3S-LSWT_PL_TS-v4.0-fv01.0-filled_test1_subset.nc \
  example_data/lake_109/LAKE00000109-GloboLakes_C3S-L3S-LSWT_PL_TS-v4.0-fv01.0-filled_test2_subset.n
```

Running will print a message

`Running lake dashboard at URL:  http://localhost:8999`

Paste this URL into a browser to open the dashboard.

## testing

The script (test/test.sh)[test/test.sh] performs an end-to-end run of these tools, running two tests and opening the lake_dashboard to view the results.

To run it, provide your JASMIN username as an argument.

```
cd test
./test.sh <username>
```

Exit the test using CTRL-C (you may need to press it a couple of times)

Note that running this test copies data to `~/dineof_test1` and `~/dineof_test2`.  Any data that existed in these folders will be deleted.  You will need to manually delete these folders.
